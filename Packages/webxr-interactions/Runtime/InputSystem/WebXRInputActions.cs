//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Packages/com.de-panther.webxr-interactions/Runtime/InputSystem/WebXRInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace WebXR.InputSystem
{
    public partial class @WebXRInputActions: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @WebXRInputActions()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""WebXRInputActions"",
    ""maps"": [
        {
            ""name"": ""XR LeftHand"",
            ""id"": ""5737d10f-8d11-4f77-b66a-c857cd20e3da"",
            ""actions"": [
                {
                    ""name"": ""Position"",
                    ""type"": ""Value"",
                    ""id"": ""90f94554-5152-4dcd-9892-3c1f367fc932"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""85fa1a7b-3a3e-4174-a548-a606f6be543f"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Is Tracked"",
                    ""type"": ""Button"",
                    ""id"": ""26337f20-d265-472d-8f5d-b2dac49cc857"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Tracking State"",
                    ""type"": ""Value"",
                    ""id"": ""61c21c37-e58c-42eb-a17e-63b0d9afff05"",
                    ""expectedControlType"": ""Integer"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Trigger"",
                    ""type"": ""Value"",
                    ""id"": ""76335e69-bd68-48bf-9c55-501f71f1268b"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Grip"",
                    ""type"": ""Value"",
                    ""id"": ""068fa163-d941-4613-9388-6df30c1f63c3"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Thumbstick"",
                    ""type"": ""Value"",
                    ""id"": ""427d8164-15f3-478c-9854-22120e59b3be"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ThumbstickPressed"",
                    ""type"": ""Button"",
                    ""id"": ""a9b848fd-16c0-40e0-b386-0d57187633aa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Touchpad"",
                    ""type"": ""Value"",
                    ""id"": ""41afd027-6b14-4900-8f9a-990529aa33d6"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TouchpadPressed"",
                    ""type"": ""Button"",
                    ""id"": ""84095972-3b7d-473b-ad24-5b59acd7d635"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ButtonA"",
                    ""type"": ""Button"",
                    ""id"": ""dc88cc1a-eaee-4248-a670-3fd74b930091"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ButtonB"",
                    ""type"": ""Button"",
                    ""id"": ""c55c0848-e2ad-4a25-9248-b807e237844e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""15778037-6a08-465c-a579-83b141139916"",
                    ""path"": ""<XRController>{LeftHand}/isTracked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""Is Tracked"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f3dd62f-0166-41f8-b405-392978a7bbca"",
                    ""path"": ""<XRController>{LeftHand}/trackingState"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""Tracking State"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""014ee298-db95-4c5e-a358-6c822d7cb34b"",
                    ""path"": ""<XRController>{LeftHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""675b567c-61b8-45dd-883f-4414d45eda3d"",
                    ""path"": ""<XRController>{LeftHand}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0e56d160-9ba3-483c-a209-fa5b66aea0e5"",
                    ""path"": ""<XRController>{LeftHand}/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""Trigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""63aa790d-a8f4-45ba-9444-437bc2ee7dc7"",
                    ""path"": ""<XRController>{LeftHand}/grip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""Grip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""43ba5fd1-7873-48a9-8031-69f1a5eaf8ae"",
                    ""path"": ""<XRController>{LeftHand}/primary2DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""Thumbstick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7dda14be-31ab-439e-a6e3-246788dd66ba"",
                    ""path"": ""<XRController>{LeftHand}/secondary2DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""Touchpad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d2afcd0c-9ded-43be-9d93-b5f63cae20b6"",
                    ""path"": ""<XRController>{LeftHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""ButtonA"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""17f38512-dbc2-4572-ba83-b15851668b47"",
                    ""path"": ""<XRController>{LeftHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""ButtonB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3ceae2e0-3858-4197-a3bd-be17f192ccaa"",
                    ""path"": ""<XRController>{LeftHand}/secondary2DAxisClick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""TouchpadPressed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""40f0145a-23fe-41f6-a684-e7d6dc62b23c"",
                    ""path"": ""<XRController>{LeftHand}/primary2DAxisClick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""ThumbstickPressed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""XR RightHand"",
            ""id"": ""4fa9d0db-f25d-4ae6-af34-4d3f9a577c04"",
            ""actions"": [
                {
                    ""name"": ""Position"",
                    ""type"": ""Value"",
                    ""id"": ""9773d43a-eff9-401d-a599-03af2b7550e1"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotation"",
                    ""type"": ""Value"",
                    ""id"": ""066d67aa-bcad-4f8a-90fa-22edefd69136"",
                    ""expectedControlType"": ""Quaternion"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Is Tracked"",
                    ""type"": ""Button"",
                    ""id"": ""6acd236d-f285-43ba-bd54-c89bfd631193"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Tracking State"",
                    ""type"": ""Value"",
                    ""id"": ""9e4ef288-9526-4d50-a020-a09c9ea22dbd"",
                    ""expectedControlType"": ""Integer"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Trigger"",
                    ""type"": ""Value"",
                    ""id"": ""df980d35-5a1d-4fbb-ac8d-700c8aba4fae"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Grip"",
                    ""type"": ""Value"",
                    ""id"": ""c4e66c4b-9887-4b92-9986-639cd146f6f8"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Thumbstick"",
                    ""type"": ""Value"",
                    ""id"": ""541a6e85-c787-4c47-a098-ab52932f8eec"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ThumbstickPressed"",
                    ""type"": ""Button"",
                    ""id"": ""034afb4f-da27-441e-b22f-76c53054eb93"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Touchpad"",
                    ""type"": ""Value"",
                    ""id"": ""9d2a1772-bcae-40c4-bc28-d36d7447db27"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""TouchpadPressed"",
                    ""type"": ""Button"",
                    ""id"": ""6059657c-efaf-43f0-aa48-8296f9697b81"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ButtonA"",
                    ""type"": ""Button"",
                    ""id"": ""b8498c86-f27e-490d-b6fc-cb116d42c422"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ButtonB"",
                    ""type"": ""Button"",
                    ""id"": ""62b343c7-ac5d-4dc7-99d7-4b6e5f8a0b65"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c942f464-e4cf-4310-a751-edb0d385324b"",
                    ""path"": ""<XRController>{RightHand}/isTracked"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""Is Tracked"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b5c22b42-e02e-46e8-bc29-6d05de9b84ae"",
                    ""path"": ""<XRController>{RightHand}/trackingState"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""Tracking State"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d6bf5eda-7f02-4f53-8eaf-65671091b868"",
                    ""path"": ""<XRController>{RightHand}/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""Trigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""376297e2-c885-44e9-97a3-a465484866b8"",
                    ""path"": ""<XRController>{RightHand}/grip"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""Grip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1db38c6b-afbb-4a14-a7b2-f8b890fb5532"",
                    ""path"": ""<XRController>{RightHand}/primary2DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""Thumbstick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""243771b7-1d06-4366-9d07-766646db5d60"",
                    ""path"": ""<XRController>{RightHand}/primary2DAxisClick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""ThumbstickPressed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c7115824-4365-4b20-9ff0-67149d190bf0"",
                    ""path"": ""<XRController>{RightHand}/secondary2DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""Touchpad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6f1e295b-f9ec-4f54-83f6-991795922292"",
                    ""path"": ""<XRController>{RightHand}/secondary2DAxisClick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""TouchpadPressed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1c578fc6-6b22-43b9-932c-84a6a69b28f6"",
                    ""path"": ""<XRController>{RightHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""ButtonA"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""01f7d2c5-74f1-49fe-aa18-5f223e3b4dcd"",
                    ""path"": ""<XRController>{RightHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""ButtonB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cab631e7-1c7b-4c82-9466-36fbf509a3d0"",
                    ""path"": ""<XRController>{RightHand}/deviceRotation"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""Rotation"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fb242f7f-5575-4104-a77c-0ed5f8aa1b4a"",
                    ""path"": ""<XRController>{RightHand}/devicePosition"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""XR"",
                    ""action"": ""Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""XR"",
            ""bindingGroup"": ""XR"",
            ""devices"": []
        }
    ]
}");
            // XR LeftHand
            m_XRLeftHand = asset.FindActionMap("XR LeftHand", throwIfNotFound: true);
            m_XRLeftHand_Position = m_XRLeftHand.FindAction("Position", throwIfNotFound: true);
            m_XRLeftHand_Rotation = m_XRLeftHand.FindAction("Rotation", throwIfNotFound: true);
            m_XRLeftHand_IsTracked = m_XRLeftHand.FindAction("Is Tracked", throwIfNotFound: true);
            m_XRLeftHand_TrackingState = m_XRLeftHand.FindAction("Tracking State", throwIfNotFound: true);
            m_XRLeftHand_Trigger = m_XRLeftHand.FindAction("Trigger", throwIfNotFound: true);
            m_XRLeftHand_Grip = m_XRLeftHand.FindAction("Grip", throwIfNotFound: true);
            m_XRLeftHand_Thumbstick = m_XRLeftHand.FindAction("Thumbstick", throwIfNotFound: true);
            m_XRLeftHand_ThumbstickPressed = m_XRLeftHand.FindAction("ThumbstickPressed", throwIfNotFound: true);
            m_XRLeftHand_Touchpad = m_XRLeftHand.FindAction("Touchpad", throwIfNotFound: true);
            m_XRLeftHand_TouchpadPressed = m_XRLeftHand.FindAction("TouchpadPressed", throwIfNotFound: true);
            m_XRLeftHand_ButtonA = m_XRLeftHand.FindAction("ButtonA", throwIfNotFound: true);
            m_XRLeftHand_ButtonB = m_XRLeftHand.FindAction("ButtonB", throwIfNotFound: true);
            // XR RightHand
            m_XRRightHand = asset.FindActionMap("XR RightHand", throwIfNotFound: true);
            m_XRRightHand_Position = m_XRRightHand.FindAction("Position", throwIfNotFound: true);
            m_XRRightHand_Rotation = m_XRRightHand.FindAction("Rotation", throwIfNotFound: true);
            m_XRRightHand_IsTracked = m_XRRightHand.FindAction("Is Tracked", throwIfNotFound: true);
            m_XRRightHand_TrackingState = m_XRRightHand.FindAction("Tracking State", throwIfNotFound: true);
            m_XRRightHand_Trigger = m_XRRightHand.FindAction("Trigger", throwIfNotFound: true);
            m_XRRightHand_Grip = m_XRRightHand.FindAction("Grip", throwIfNotFound: true);
            m_XRRightHand_Thumbstick = m_XRRightHand.FindAction("Thumbstick", throwIfNotFound: true);
            m_XRRightHand_ThumbstickPressed = m_XRRightHand.FindAction("ThumbstickPressed", throwIfNotFound: true);
            m_XRRightHand_Touchpad = m_XRRightHand.FindAction("Touchpad", throwIfNotFound: true);
            m_XRRightHand_TouchpadPressed = m_XRRightHand.FindAction("TouchpadPressed", throwIfNotFound: true);
            m_XRRightHand_ButtonA = m_XRRightHand.FindAction("ButtonA", throwIfNotFound: true);
            m_XRRightHand_ButtonB = m_XRRightHand.FindAction("ButtonB", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // XR LeftHand
        private readonly InputActionMap m_XRLeftHand;
        private List<IXRLeftHandActions> m_XRLeftHandActionsCallbackInterfaces = new List<IXRLeftHandActions>();
        private readonly InputAction m_XRLeftHand_Position;
        private readonly InputAction m_XRLeftHand_Rotation;
        private readonly InputAction m_XRLeftHand_IsTracked;
        private readonly InputAction m_XRLeftHand_TrackingState;
        private readonly InputAction m_XRLeftHand_Trigger;
        private readonly InputAction m_XRLeftHand_Grip;
        private readonly InputAction m_XRLeftHand_Thumbstick;
        private readonly InputAction m_XRLeftHand_ThumbstickPressed;
        private readonly InputAction m_XRLeftHand_Touchpad;
        private readonly InputAction m_XRLeftHand_TouchpadPressed;
        private readonly InputAction m_XRLeftHand_ButtonA;
        private readonly InputAction m_XRLeftHand_ButtonB;
        public struct XRLeftHandActions
        {
            private @WebXRInputActions m_Wrapper;
            public XRLeftHandActions(@WebXRInputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @Position => m_Wrapper.m_XRLeftHand_Position;
            public InputAction @Rotation => m_Wrapper.m_XRLeftHand_Rotation;
            public InputAction @IsTracked => m_Wrapper.m_XRLeftHand_IsTracked;
            public InputAction @TrackingState => m_Wrapper.m_XRLeftHand_TrackingState;
            public InputAction @Trigger => m_Wrapper.m_XRLeftHand_Trigger;
            public InputAction @Grip => m_Wrapper.m_XRLeftHand_Grip;
            public InputAction @Thumbstick => m_Wrapper.m_XRLeftHand_Thumbstick;
            public InputAction @ThumbstickPressed => m_Wrapper.m_XRLeftHand_ThumbstickPressed;
            public InputAction @Touchpad => m_Wrapper.m_XRLeftHand_Touchpad;
            public InputAction @TouchpadPressed => m_Wrapper.m_XRLeftHand_TouchpadPressed;
            public InputAction @ButtonA => m_Wrapper.m_XRLeftHand_ButtonA;
            public InputAction @ButtonB => m_Wrapper.m_XRLeftHand_ButtonB;
            public InputActionMap Get() { return m_Wrapper.m_XRLeftHand; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(XRLeftHandActions set) { return set.Get(); }
            public void AddCallbacks(IXRLeftHandActions instance)
            {
                if (instance == null || m_Wrapper.m_XRLeftHandActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_XRLeftHandActionsCallbackInterfaces.Add(instance);
                @Position.started += instance.OnPosition;
                @Position.performed += instance.OnPosition;
                @Position.canceled += instance.OnPosition;
                @Rotation.started += instance.OnRotation;
                @Rotation.performed += instance.OnRotation;
                @Rotation.canceled += instance.OnRotation;
                @IsTracked.started += instance.OnIsTracked;
                @IsTracked.performed += instance.OnIsTracked;
                @IsTracked.canceled += instance.OnIsTracked;
                @TrackingState.started += instance.OnTrackingState;
                @TrackingState.performed += instance.OnTrackingState;
                @TrackingState.canceled += instance.OnTrackingState;
                @Trigger.started += instance.OnTrigger;
                @Trigger.performed += instance.OnTrigger;
                @Trigger.canceled += instance.OnTrigger;
                @Grip.started += instance.OnGrip;
                @Grip.performed += instance.OnGrip;
                @Grip.canceled += instance.OnGrip;
                @Thumbstick.started += instance.OnThumbstick;
                @Thumbstick.performed += instance.OnThumbstick;
                @Thumbstick.canceled += instance.OnThumbstick;
                @ThumbstickPressed.started += instance.OnThumbstickPressed;
                @ThumbstickPressed.performed += instance.OnThumbstickPressed;
                @ThumbstickPressed.canceled += instance.OnThumbstickPressed;
                @Touchpad.started += instance.OnTouchpad;
                @Touchpad.performed += instance.OnTouchpad;
                @Touchpad.canceled += instance.OnTouchpad;
                @TouchpadPressed.started += instance.OnTouchpadPressed;
                @TouchpadPressed.performed += instance.OnTouchpadPressed;
                @TouchpadPressed.canceled += instance.OnTouchpadPressed;
                @ButtonA.started += instance.OnButtonA;
                @ButtonA.performed += instance.OnButtonA;
                @ButtonA.canceled += instance.OnButtonA;
                @ButtonB.started += instance.OnButtonB;
                @ButtonB.performed += instance.OnButtonB;
                @ButtonB.canceled += instance.OnButtonB;
            }

            private void UnregisterCallbacks(IXRLeftHandActions instance)
            {
                @Position.started -= instance.OnPosition;
                @Position.performed -= instance.OnPosition;
                @Position.canceled -= instance.OnPosition;
                @Rotation.started -= instance.OnRotation;
                @Rotation.performed -= instance.OnRotation;
                @Rotation.canceled -= instance.OnRotation;
                @IsTracked.started -= instance.OnIsTracked;
                @IsTracked.performed -= instance.OnIsTracked;
                @IsTracked.canceled -= instance.OnIsTracked;
                @TrackingState.started -= instance.OnTrackingState;
                @TrackingState.performed -= instance.OnTrackingState;
                @TrackingState.canceled -= instance.OnTrackingState;
                @Trigger.started -= instance.OnTrigger;
                @Trigger.performed -= instance.OnTrigger;
                @Trigger.canceled -= instance.OnTrigger;
                @Grip.started -= instance.OnGrip;
                @Grip.performed -= instance.OnGrip;
                @Grip.canceled -= instance.OnGrip;
                @Thumbstick.started -= instance.OnThumbstick;
                @Thumbstick.performed -= instance.OnThumbstick;
                @Thumbstick.canceled -= instance.OnThumbstick;
                @ThumbstickPressed.started -= instance.OnThumbstickPressed;
                @ThumbstickPressed.performed -= instance.OnThumbstickPressed;
                @ThumbstickPressed.canceled -= instance.OnThumbstickPressed;
                @Touchpad.started -= instance.OnTouchpad;
                @Touchpad.performed -= instance.OnTouchpad;
                @Touchpad.canceled -= instance.OnTouchpad;
                @TouchpadPressed.started -= instance.OnTouchpadPressed;
                @TouchpadPressed.performed -= instance.OnTouchpadPressed;
                @TouchpadPressed.canceled -= instance.OnTouchpadPressed;
                @ButtonA.started -= instance.OnButtonA;
                @ButtonA.performed -= instance.OnButtonA;
                @ButtonA.canceled -= instance.OnButtonA;
                @ButtonB.started -= instance.OnButtonB;
                @ButtonB.performed -= instance.OnButtonB;
                @ButtonB.canceled -= instance.OnButtonB;
            }

            public void RemoveCallbacks(IXRLeftHandActions instance)
            {
                if (m_Wrapper.m_XRLeftHandActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IXRLeftHandActions instance)
            {
                foreach (var item in m_Wrapper.m_XRLeftHandActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_XRLeftHandActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public XRLeftHandActions @XRLeftHand => new XRLeftHandActions(this);

        // XR RightHand
        private readonly InputActionMap m_XRRightHand;
        private List<IXRRightHandActions> m_XRRightHandActionsCallbackInterfaces = new List<IXRRightHandActions>();
        private readonly InputAction m_XRRightHand_Position;
        private readonly InputAction m_XRRightHand_Rotation;
        private readonly InputAction m_XRRightHand_IsTracked;
        private readonly InputAction m_XRRightHand_TrackingState;
        private readonly InputAction m_XRRightHand_Trigger;
        private readonly InputAction m_XRRightHand_Grip;
        private readonly InputAction m_XRRightHand_Thumbstick;
        private readonly InputAction m_XRRightHand_ThumbstickPressed;
        private readonly InputAction m_XRRightHand_Touchpad;
        private readonly InputAction m_XRRightHand_TouchpadPressed;
        private readonly InputAction m_XRRightHand_ButtonA;
        private readonly InputAction m_XRRightHand_ButtonB;
        public struct XRRightHandActions
        {
            private @WebXRInputActions m_Wrapper;
            public XRRightHandActions(@WebXRInputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @Position => m_Wrapper.m_XRRightHand_Position;
            public InputAction @Rotation => m_Wrapper.m_XRRightHand_Rotation;
            public InputAction @IsTracked => m_Wrapper.m_XRRightHand_IsTracked;
            public InputAction @TrackingState => m_Wrapper.m_XRRightHand_TrackingState;
            public InputAction @Trigger => m_Wrapper.m_XRRightHand_Trigger;
            public InputAction @Grip => m_Wrapper.m_XRRightHand_Grip;
            public InputAction @Thumbstick => m_Wrapper.m_XRRightHand_Thumbstick;
            public InputAction @ThumbstickPressed => m_Wrapper.m_XRRightHand_ThumbstickPressed;
            public InputAction @Touchpad => m_Wrapper.m_XRRightHand_Touchpad;
            public InputAction @TouchpadPressed => m_Wrapper.m_XRRightHand_TouchpadPressed;
            public InputAction @ButtonA => m_Wrapper.m_XRRightHand_ButtonA;
            public InputAction @ButtonB => m_Wrapper.m_XRRightHand_ButtonB;
            public InputActionMap Get() { return m_Wrapper.m_XRRightHand; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(XRRightHandActions set) { return set.Get(); }
            public void AddCallbacks(IXRRightHandActions instance)
            {
                if (instance == null || m_Wrapper.m_XRRightHandActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_XRRightHandActionsCallbackInterfaces.Add(instance);
                @Position.started += instance.OnPosition;
                @Position.performed += instance.OnPosition;
                @Position.canceled += instance.OnPosition;
                @Rotation.started += instance.OnRotation;
                @Rotation.performed += instance.OnRotation;
                @Rotation.canceled += instance.OnRotation;
                @IsTracked.started += instance.OnIsTracked;
                @IsTracked.performed += instance.OnIsTracked;
                @IsTracked.canceled += instance.OnIsTracked;
                @TrackingState.started += instance.OnTrackingState;
                @TrackingState.performed += instance.OnTrackingState;
                @TrackingState.canceled += instance.OnTrackingState;
                @Trigger.started += instance.OnTrigger;
                @Trigger.performed += instance.OnTrigger;
                @Trigger.canceled += instance.OnTrigger;
                @Grip.started += instance.OnGrip;
                @Grip.performed += instance.OnGrip;
                @Grip.canceled += instance.OnGrip;
                @Thumbstick.started += instance.OnThumbstick;
                @Thumbstick.performed += instance.OnThumbstick;
                @Thumbstick.canceled += instance.OnThumbstick;
                @ThumbstickPressed.started += instance.OnThumbstickPressed;
                @ThumbstickPressed.performed += instance.OnThumbstickPressed;
                @ThumbstickPressed.canceled += instance.OnThumbstickPressed;
                @Touchpad.started += instance.OnTouchpad;
                @Touchpad.performed += instance.OnTouchpad;
                @Touchpad.canceled += instance.OnTouchpad;
                @TouchpadPressed.started += instance.OnTouchpadPressed;
                @TouchpadPressed.performed += instance.OnTouchpadPressed;
                @TouchpadPressed.canceled += instance.OnTouchpadPressed;
                @ButtonA.started += instance.OnButtonA;
                @ButtonA.performed += instance.OnButtonA;
                @ButtonA.canceled += instance.OnButtonA;
                @ButtonB.started += instance.OnButtonB;
                @ButtonB.performed += instance.OnButtonB;
                @ButtonB.canceled += instance.OnButtonB;
            }

            private void UnregisterCallbacks(IXRRightHandActions instance)
            {
                @Position.started -= instance.OnPosition;
                @Position.performed -= instance.OnPosition;
                @Position.canceled -= instance.OnPosition;
                @Rotation.started -= instance.OnRotation;
                @Rotation.performed -= instance.OnRotation;
                @Rotation.canceled -= instance.OnRotation;
                @IsTracked.started -= instance.OnIsTracked;
                @IsTracked.performed -= instance.OnIsTracked;
                @IsTracked.canceled -= instance.OnIsTracked;
                @TrackingState.started -= instance.OnTrackingState;
                @TrackingState.performed -= instance.OnTrackingState;
                @TrackingState.canceled -= instance.OnTrackingState;
                @Trigger.started -= instance.OnTrigger;
                @Trigger.performed -= instance.OnTrigger;
                @Trigger.canceled -= instance.OnTrigger;
                @Grip.started -= instance.OnGrip;
                @Grip.performed -= instance.OnGrip;
                @Grip.canceled -= instance.OnGrip;
                @Thumbstick.started -= instance.OnThumbstick;
                @Thumbstick.performed -= instance.OnThumbstick;
                @Thumbstick.canceled -= instance.OnThumbstick;
                @ThumbstickPressed.started -= instance.OnThumbstickPressed;
                @ThumbstickPressed.performed -= instance.OnThumbstickPressed;
                @ThumbstickPressed.canceled -= instance.OnThumbstickPressed;
                @Touchpad.started -= instance.OnTouchpad;
                @Touchpad.performed -= instance.OnTouchpad;
                @Touchpad.canceled -= instance.OnTouchpad;
                @TouchpadPressed.started -= instance.OnTouchpadPressed;
                @TouchpadPressed.performed -= instance.OnTouchpadPressed;
                @TouchpadPressed.canceled -= instance.OnTouchpadPressed;
                @ButtonA.started -= instance.OnButtonA;
                @ButtonA.performed -= instance.OnButtonA;
                @ButtonA.canceled -= instance.OnButtonA;
                @ButtonB.started -= instance.OnButtonB;
                @ButtonB.performed -= instance.OnButtonB;
                @ButtonB.canceled -= instance.OnButtonB;
            }

            public void RemoveCallbacks(IXRRightHandActions instance)
            {
                if (m_Wrapper.m_XRRightHandActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IXRRightHandActions instance)
            {
                foreach (var item in m_Wrapper.m_XRRightHandActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_XRRightHandActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public XRRightHandActions @XRRightHand => new XRRightHandActions(this);
        private int m_XRSchemeIndex = -1;
        public InputControlScheme XRScheme
        {
            get
            {
                if (m_XRSchemeIndex == -1) m_XRSchemeIndex = asset.FindControlSchemeIndex("XR");
                return asset.controlSchemes[m_XRSchemeIndex];
            }
        }
        public interface IXRLeftHandActions
        {
            void OnPosition(InputAction.CallbackContext context);
            void OnRotation(InputAction.CallbackContext context);
            void OnIsTracked(InputAction.CallbackContext context);
            void OnTrackingState(InputAction.CallbackContext context);
            void OnTrigger(InputAction.CallbackContext context);
            void OnGrip(InputAction.CallbackContext context);
            void OnThumbstick(InputAction.CallbackContext context);
            void OnThumbstickPressed(InputAction.CallbackContext context);
            void OnTouchpad(InputAction.CallbackContext context);
            void OnTouchpadPressed(InputAction.CallbackContext context);
            void OnButtonA(InputAction.CallbackContext context);
            void OnButtonB(InputAction.CallbackContext context);
        }
        public interface IXRRightHandActions
        {
            void OnPosition(InputAction.CallbackContext context);
            void OnRotation(InputAction.CallbackContext context);
            void OnIsTracked(InputAction.CallbackContext context);
            void OnTrackingState(InputAction.CallbackContext context);
            void OnTrigger(InputAction.CallbackContext context);
            void OnGrip(InputAction.CallbackContext context);
            void OnThumbstick(InputAction.CallbackContext context);
            void OnThumbstickPressed(InputAction.CallbackContext context);
            void OnTouchpad(InputAction.CallbackContext context);
            void OnTouchpadPressed(InputAction.CallbackContext context);
            void OnButtonA(InputAction.CallbackContext context);
            void OnButtonB(InputAction.CallbackContext context);
        }
    }
}
